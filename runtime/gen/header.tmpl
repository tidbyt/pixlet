package runtime

// Code generated by runtime/gen. DO NOT EDIT.


import (
	"fmt"
	"sync"

	"github.com/lucasb-eyer/go-colorful"
	"github.com/mitchellh/hashstructure/v2"
	"go.starlark.net/starlark"
	"go.starlark.net/starlarkstruct"
	"tidbyt.dev/pixlet/render"
)

const (
	ModuleName = "render"
)

var (
	once   sync.Once
	module starlark.StringDict
)

func LoadModule() (starlark.StringDict, error) {
	once.Do(func() {
		fnt := starlark.NewDict(len(render.Font))
		for k, _ := range render.Font {
			fnt.SetKey(starlark.String(k), starlark.String(k))
		}
		fnt.Freeze()

		module = starlark.StringDict{
			ModuleName: &starlarkstruct.Module{
				Name: ModuleName,
				Members: starlark.StringDict{
					"Root":       starlark.NewBuiltin("Root", newRoot),
					"Plot":        starlark.NewBuiltin("Plot", newPlot),
					"AnimatedPositioned": starlark.NewBuiltin(
						"AnimatedPositioned",
						newAnimatedPositioned,
					),
					"fonts": fnt,
{{range .}}
					"{{.Name}}":  starlark.NewBuiltin("{{.Name}}", new{{.Name}}),
{{end}}
				},
			},
		}
	})

	return module, nil
}

type Widget interface {
	AsRenderWidget() render.Widget
}
