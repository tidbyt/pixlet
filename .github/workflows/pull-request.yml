name: pixlet

on:
  pull_request:
    branches:
      - "*"

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"

      - name: Install buildifier
        run: make install-buildifier

      - name: Run buildifier
        run: buildifier -d -r ./

  build-and-test:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install Go
        uses: actions/setup-go@v3
        with:
          go-version: "1.19"

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version: "16"

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        if: matrix.os == 'windows-latest'
        with:
          update: true
          install: >-
            mingw-w64-x86_64-go
            mingw-w64-x86_64-toolchain
            mingw-w64-x86_64-libwebp

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Linux dependencies
        if: matrix.os == 'ubuntu-latest'
        run: sudo apt-get install -y libwebp-dev

      - name: Install macOS dependencies
        if: matrix.os == 'macos-latest'
        run: brew install webp

      - name: Install frontend dependencies
        run: npm install

      - name: Build frontend
        run: npm run build

      - name: Build
        run: make build
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'

      - name: Build Windows
        shell: msys2 {0}
        run: make build
        if: matrix.os == 'windows-latest'

      - name: Test
        run: make test
        if: matrix.os == 'ubuntu-latest' || matrix.os == 'macos-latest'

      - name: Test Windows
        shell: msys2 {0}
        run: make test
        if: matrix.os == 'windows-latest'
