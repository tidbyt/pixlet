name: pixlet

on:
  push:
    branches:
      - main
    tags:
      - 'v*'

  pull_request:
    branches:
      - '*'

jobs:
  build-and-test:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.16.12'

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo apt-get install -y libwebp-dev

    - name: Install macOS dependencies
      if: matrix.os == 'macos-latest'
      run: brew install webp

    - name: Build
      run: make build

    - name: Test
      run: make test

  build-release-artifacts:
    name: Build Release Artifacts
    needs: build-and-test
    if: github.ref == 'refs/heads/main'
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.16.12'

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install Linux dependencies
      if: matrix.os == 'ubuntu-latest'
      run: sudo ./scripts/setup-linux.sh

    - name: Install macOS dependencies
      if: matrix.os == 'macos-latest'
      run: ./scripts/setup-macos.sh

    - name: Build Release Linux
      if: matrix.os == 'ubuntu-latest'
      run: make release-linux

    - name: Build Release macOS
      if: matrix.os == 'macos-latest'
      run: make release-macos

    - name: Upload Release Artifacts
      uses: actions/upload-artifact@v2
      with:
        name: release-artifacts
        path: build

  create-release:
    name: Create Github Release
    runs-on: ubuntu-latest
    needs: build-release-artifacts
    if: startsWith(github.ref, 'refs/tags/')

    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Install Go
      uses: actions/setup-go@v2
      with:
        go-version: '1.16.12'

    - name: Fetch Release Artifacts
      uses: actions/download-artifact@v2
      with:
        name: release-artifacts

    - name: Run GoReleaser
      uses: goreleaser/goreleaser-action@v2
      with:
        version: ${{github.ref_name}}
        args: release
      env:
        GITHUB_TOKEN: ${{ secrets.TIDBYT_GITHUB_TOKEN }}